/**
 * @fileOverview 
 */
package (
    identity
    args
    constant
    
    flip

    concat
    map
    foldl
    foldr
    slice)
{

identity = \x -> x;

args = \-args(...) -> args;

constant = \x -> \ -> x;


flip = \f ->
    \x, y -> f(y, x);

/* 
 ******************************************************************************/
concat = \-args(...) ->
    Array.prototype.concat.apply([], args);

map = \f, a ->
    Array.prototype.map.call(a, f);

foldl = \f, z, a ->
    Array.prototype.reduce.call(a, f, z);

foldr = \f, z, a ->
    Array.prototype.reduceRight.call(a, f, z);

slice = \start, end, a ->
    Array.prototype.slice.call(a, start, end);

}