/**
 * @fileOverview
 */
package (
    debug
    
    debuggable
    debuggableStatement
    debuggableCall)
with
    import 'atum::compute' {
        abrupt
        bind
        callcc
        computeContext
        just
        next},
    import 'atum::compute::statement' statement,
    import 'sheut::interpreter::debuggable' atum_debuggable
in {

debug = \p f ->
    bind(computeContext, \ctx ->
        next(
            callcc \ k ->
               abrupt <| f(k, ctx),
            p));

debuggable = \p ->
    debug(p, atum_debuggable.Debuggable.create);

debuggableStatement = \p ->
   debug(p, atum_debuggable.StatementDebuggable.create);

debuggableCall = \p ->
    debug(
        bind(p, \x -> 
            debug(just x, atum_debuggable.PostCallDebuggable.create)),
        atum_debuggable.PreCallDebuggable.create);

}